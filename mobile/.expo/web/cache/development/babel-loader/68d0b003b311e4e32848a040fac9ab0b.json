{"ast":null,"code":"// @flow\nimport { NativeModulesProxy } from 'expo-core'; // On Android we pass the manifest in JSON form so this step is necessary\n\nconst {\n  ExponentConstants\n} = NativeModulesProxy;\n\nif (!ExponentConstants) {\n  console.warn(\"No native ExponentConstants module found, are you sure the expo-constants's module is linked properly?\");\n}\n\nlet manifest = null;\n\nif (ExponentConstants && ExponentConstants.manifest) {\n  manifest = ExponentConstants.manifest;\n\n  if (typeof manifest === 'string') {\n    manifest = JSON.parse(manifest);\n  }\n}\n\nexport default { ...ExponentConstants,\n  manifest,\n  // Legacy aliases\n  deviceId: ExponentConstants ? ExponentConstants.installationId : undefined,\n  linkingUrl: ExponentConstants ? ExponentConstants.linkingUri : undefined\n};","map":{"version":3,"sources":["C:/xampp/htdocs/app/mobile/node_modules/expo-constants/src/Constants.js"],"names":["NativeModulesProxy","ExponentConstants","console","warn","manifest","JSON","parse","deviceId","installationId","undefined","linkingUrl","linkingUri"],"mappings":"AAAA;AAEA,SAASA,kBAAT,QAAmC,WAAnC,C,CAEA;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAwBD,kBAA9B;;AAEA,IAAI,CAACC,iBAAL,EAAwB;AACtBC,EAAAA,OAAO,CAACC,IAAR,CACE,wGADF;AAGD;;AAED,IAAIC,QAAQ,GAAG,IAAf;;AACA,IAAIH,iBAAiB,IAAIA,iBAAiB,CAACG,QAA3C,EAAqD;AACnDA,EAAAA,QAAQ,GAAGH,iBAAiB,CAACG,QAA7B;;AACA,MAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChCA,IAAAA,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWF,QAAX,CAAX;AACD;AACF;;AAED,eAAe,EACb,GAAGH,iBADU;AAEbG,EAAAA,QAFa;AAGb;AACAG,EAAAA,QAAQ,EAAEN,iBAAiB,GAAGA,iBAAiB,CAACO,cAArB,GAAsCC,SAJpD;AAKbC,EAAAA,UAAU,EAAET,iBAAiB,GAAGA,iBAAiB,CAACU,UAArB,GAAkCF;AALlD,CAAf","sourcesContent":["// @flow\n\nimport { NativeModulesProxy } from 'expo-core';\n\n// On Android we pass the manifest in JSON form so this step is necessary\nconst { ExponentConstants } = NativeModulesProxy;\n\nif (!ExponentConstants) {\n  console.warn(\n    \"No native ExponentConstants module found, are you sure the expo-constants's module is linked properly?\"\n  );\n}\n\nlet manifest = null;\nif (ExponentConstants && ExponentConstants.manifest) {\n  manifest = ExponentConstants.manifest;\n  if (typeof manifest === 'string') {\n    manifest = JSON.parse(manifest);\n  }\n}\n\nexport default {\n  ...ExponentConstants,\n  manifest,\n  // Legacy aliases\n  deviceId: ExponentConstants ? ExponentConstants.installationId : undefined,\n  linkingUrl: ExponentConstants ? ExponentConstants.linkingUri : undefined,\n};\n"]},"metadata":{},"sourceType":"module"}