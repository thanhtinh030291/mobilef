{"ast":null,"code":"import { cond, sub, pow, divide, multiply, add, block, set, lessThan } from '../base';\nimport { abs } from '../derived';\nconst VELOCITY_EPS = 5;\nexport default function decay(clock, state, config) {\n  const lastTime = cond(state.time, state.time, clock);\n  const deltaTime = sub(clock, lastTime); // v0 = v / 1000\n  // v = v0 * powf(deceleration, dt);\n  // v = v * 1000;\n  // x0 = x;\n  // x = x0 + v0 * deceleration * (1 - powf(deceleration, dt)) / (1 - deceleration)\n\n  const kv = pow(config.deceleration, deltaTime);\n  const kx = divide(multiply(config.deceleration, sub(1, kv)), sub(1, config.deceleration));\n  const v0 = divide(state.velocity, 1000);\n  const v = multiply(v0, kv, 1000);\n  const x = add(state.position, multiply(v0, kx));\n  return block([set(state.position, x), set(state.velocity, v), set(state.time, clock), cond(lessThan(abs(v), VELOCITY_EPS), set(state.finished, 1))]);\n}","map":{"version":3,"sources":["C:/xampp/htdocs/app/mobile/node_modules/react-native-reanimated/src/animations/decay.js"],"names":["cond","sub","pow","divide","multiply","add","block","set","lessThan","abs","VELOCITY_EPS","decay","clock","state","config","lastTime","time","deltaTime","kv","deceleration","kx","v0","velocity","v","x","position","finished"],"mappings":"AAAA,SACEA,IADF,EAEEC,GAFF,EAGEC,GAHF,EAIEC,MAJF,EAKEC,QALF,EAMEC,GANF,EAOEC,KAPF,EAQEC,GARF,EASEC,QATF,QAUO,SAVP;AAWA,SAASC,GAAT,QAAoB,YAApB;AAEA,MAAMC,YAAY,GAAG,CAArB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AAClD,QAAMC,QAAQ,GAAGf,IAAI,CAACa,KAAK,CAACG,IAAP,EAAaH,KAAK,CAACG,IAAnB,EAAyBJ,KAAzB,CAArB;AACA,QAAMK,SAAS,GAAGhB,GAAG,CAACW,KAAD,EAAQG,QAAR,CAArB,CAFkD,CAIlD;AACA;AACA;AAEA;AACA;;AACA,QAAMG,EAAE,GAAGhB,GAAG,CAACY,MAAM,CAACK,YAAR,EAAsBF,SAAtB,CAAd;AACA,QAAMG,EAAE,GAAGjB,MAAM,CACfC,QAAQ,CAACU,MAAM,CAACK,YAAR,EAAsBlB,GAAG,CAAC,CAAD,EAAIiB,EAAJ,CAAzB,CADO,EAEfjB,GAAG,CAAC,CAAD,EAAIa,MAAM,CAACK,YAAX,CAFY,CAAjB;AAIA,QAAME,EAAE,GAAGlB,MAAM,CAACU,KAAK,CAACS,QAAP,EAAiB,IAAjB,CAAjB;AACA,QAAMC,CAAC,GAAGnB,QAAQ,CAACiB,EAAD,EAAKH,EAAL,EAAS,IAAT,CAAlB;AACA,QAAMM,CAAC,GAAGnB,GAAG,CAACQ,KAAK,CAACY,QAAP,EAAiBrB,QAAQ,CAACiB,EAAD,EAAKD,EAAL,CAAzB,CAAb;AACA,SAAOd,KAAK,CAAC,CACXC,GAAG,CAACM,KAAK,CAACY,QAAP,EAAiBD,CAAjB,CADQ,EAEXjB,GAAG,CAACM,KAAK,CAACS,QAAP,EAAiBC,CAAjB,CAFQ,EAGXhB,GAAG,CAACM,KAAK,CAACG,IAAP,EAAaJ,KAAb,CAHQ,EAIXZ,IAAI,CAACQ,QAAQ,CAACC,GAAG,CAACc,CAAD,CAAJ,EAASb,YAAT,CAAT,EAAiCH,GAAG,CAACM,KAAK,CAACa,QAAP,EAAiB,CAAjB,CAApC,CAJO,CAAD,CAAZ;AAMD","sourcesContent":["import {\n  cond,\n  sub,\n  pow,\n  divide,\n  multiply,\n  add,\n  block,\n  set,\n  lessThan,\n} from '../base';\nimport { abs } from '../derived';\n\nconst VELOCITY_EPS = 5;\n\nexport default function decay(clock, state, config) {\n  const lastTime = cond(state.time, state.time, clock);\n  const deltaTime = sub(clock, lastTime);\n\n  // v0 = v / 1000\n  // v = v0 * powf(deceleration, dt);\n  // v = v * 1000;\n\n  // x0 = x;\n  // x = x0 + v0 * deceleration * (1 - powf(deceleration, dt)) / (1 - deceleration)\n  const kv = pow(config.deceleration, deltaTime);\n  const kx = divide(\n    multiply(config.deceleration, sub(1, kv)),\n    sub(1, config.deceleration)\n  );\n  const v0 = divide(state.velocity, 1000);\n  const v = multiply(v0, kv, 1000);\n  const x = add(state.position, multiply(v0, kx));\n  return block([\n    set(state.position, x),\n    set(state.velocity, v),\n    set(state.time, clock),\n    cond(lessThan(abs(v), VELOCITY_EPS), set(state.finished, 1)),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}